{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["pages","amount","numberedPages","i","push","Pagination","total","perPage","currentPage","onPageChange","lastPage","Math","ceil","className","classNames","disabled","href","onClick","map","page","active","items","from","to","numbers","n","getNumbers","App","useState","setPerPage","setCurrentPage","firstIndex","lastIndex","currentItems","useMemo","slice","length","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"kNAUMA,EAAQ,SAACC,GAGb,IAFA,IAAMC,EAAgB,GAEbC,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCD,EAAcE,KAAKD,GAGrB,OAAOD,GAGIG,EAAa,SAAC,GAKH,IAJtBC,EAIqB,EAJrBA,MACAC,EAGqB,EAHrBA,QAGqB,IAFrBC,mBAEqB,MAFP,EAEO,EADrBC,EACqB,EADrBA,aAEMC,EAAWC,KAAKC,KAAKN,EAAQC,GAUnC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CACrCC,SAA0B,IAAhBP,IADZ,SAIE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBR,EACfS,QAfe,WACrBR,EAA6B,IAAhBD,EAAoBA,EAAc,EAAIA,IAS/C,oBAUDR,EAAMU,GAAUQ,KAAI,SAAAC,GAAI,OACvB,oBACEN,UAAWC,IAAW,YACpB,CAAEM,OAAQD,IAASX,IAFvB,SAKE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMR,EAAaU,IAJ9B,SAMGA,KAREA,MAaT,oBAAIN,UAAWC,IAAW,YACxB,CAAEC,SAAUP,IAAgBE,IAD9B,SAGE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeR,IAAgBE,EAC/BO,QAjDe,WACrBR,EAAaD,IAAgBE,EAAWF,EAAc,EAAIA,IA2CtD,wBCnER,IAAMa,ECLC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQpB,KAAKqB,GAGf,OAAOD,EDFKE,CAAW,EAAG,IACzBR,KAAI,SAAAO,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOrB,EAAP,KAAgBsB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOpB,EAAP,KAAoBsB,EAApB,KAEMC,GAAcvB,EAAc,GAAKD,EACjCyB,EAAYD,EAAaxB,EAEzB0B,EAAeC,mBAAQ,WAC3B,OAAOb,EAAMc,MAAMJ,EAAYC,KAC9B,CAACxB,EAAaD,IAYjB,OACE,sBAAKM,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiCuB,EAAa,EAD9C,cACqDC,EAAYX,EAAMe,OACjEf,EAAMe,OACNJ,EAHN,eAGsBX,EAAMe,OAH5B,OAMA,sBAAKvB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAO/B,EACPgC,SA1BoC,SAACC,GAC7CX,GAAYW,EAAMC,OAAOH,OACzBR,EAAe,IAmBT,UAOE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEP,MAAOe,EAAMe,OACb7B,QAASA,EACTE,aAtCmB,SAACU,GACxBW,EAAeX,IAsCXX,YAAaA,IAGf,6BACGyB,EAAaf,KAAI,SAAAyB,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YEjE1DC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cfd12fdd.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ninterface PaginationProps {\n  total: number,\n  perPage: number,\n  // eslint-disable-next-line react/require-default-props\n  currentPage?: number,\n  onPageChange: (page: number) => void,\n}\n\nconst pages = (amount: number) => {\n  const numberedPages = [];\n\n  for (let i = 1; i <= amount; i += 1) {\n    numberedPages.push(i);\n  }\n\n  return numberedPages;\n};\n\nexport const Pagination = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}: PaginationProps) => {\n  const lastPage = Math.ceil(total / perPage);\n\n  const handleNextPage = () => {\n    onPageChange(currentPage !== lastPage ? currentPage + 1 : currentPage);\n  };\n\n  const handlePrevPage = () => {\n    onPageChange(currentPage !== 1 ? currentPage - 1 : currentPage);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', {\n        disabled: currentPage === 1,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrevPage}\n        >\n          «\n        </a>\n      </li>\n      {pages(lastPage).map(page => (\n        <li\n          className={classNames('page-item',\n            { active: page === currentPage })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n\n          </a>\n        </li>\n      ))}\n      <li className={classNames('page-item',\n        { disabled: currentPage === lastPage })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === lastPage}\n          onClick={handleNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useMemo, useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const firstIndex = (currentPage - 1) * perPage;\n  const lastIndex = firstIndex + perPage;\n\n  const currentItems = useMemo(() => {\n    return items.slice(firstIndex, lastIndex);\n  }, [currentPage, perPage]);\n\n  const handlePerPageChange:\n  React.ChangeEventHandler<HTMLSelectElement> = (event) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstIndex + 1} - ${lastIndex > items.length\n          ? items.length\n          : lastIndex} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        onPageChange={handlePageChange}\n        currentPage={currentPage}\n      />\n\n      <ul>\n        {currentItems.map(item => <li data-cy=\"item\" key={item}>{item}</li>)}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}